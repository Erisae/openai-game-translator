# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and coverage

on:
  push:
    branches: [ "main", "hw6" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.9]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository 
      uses: actions/checkout@v3

    # - name: Print OS version
    #   run: |
    #     echo "Running on ${{ matrix.os }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: 'pyproject.toml'
        
    # - name: set up portaudio [ubuntu]
    #   if: ${{ matrix.os == 'ubuntu-latest'}}
    #   run: |
    #     sudo apt install portaudio19-dev
      
    - name: set up portaudio [macos]
      if: ${{ matrix.os == 'macos-latest'}}
      run: |
        brew install portaudio

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make develop

    - name: Build
      run: |
        make build
      
    - name: Lint
      run: |
        make lint

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Test
      env:
        xunfei_appid: ${{ secrets.XUNFEI_APPID }}
        xunfei_apikey: ${{ secrets.XUNFEI_apikey }}
        xunfei_apisecret: ${{ secrets.XUNFEI_APISECRET }}
        openai_key: ${{ secrets.OPENAI_KEY  }}
      run: |
        make coverage xunfei_appid=xunfei_appid xunfei_apikey=xunfei_apikey xunfei_apisecret=xunfei_apisecret openai_key=openai_key
        
    # - name: Upload coverage to Codecov [linux]
    #   run: |
    #     cd tests
    #     curl -Os https://uploader.codecov.io/latest/linux/codecov
    #     chmod +x codecov
    #     ./codecov -t ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage to Codecov [macos]
      if: ${{ matrix.os == 'macos-latest'}}
      run: |
        cd tests
        curl -Os https://uploader.codecov.io/latest/macos/codecov
        chmod +x codecov
        ./codecov -t ${{ secrets.CODECOV_TOKEN }}